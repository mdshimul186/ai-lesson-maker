{
  "video_subject": null,
  "video_script": null,
  "video_terms": null,
  "video_aspect": "9:16",
  "video_concat_mode": "random",
  "video_clip_duration": 5,
  "video_count": 1,
  "video_source": "pexels",
  "video_materials": null,
  "video_language": "English",
  "voice_name": "en-AU-NatashaNeural",
  "voice_volume": 1.0,
  "voice_rate": 1.0,
  "bgm_type": "random",
  "bgm_file": "",
  "bgm_volume": 0.2,
  "subtitle_enabled": true,
  "subtitle_position": "bottom",
  "custom_position": 70.0,
  "font_name": "STHeitiMedium.ttc",
  "text_fore_color": "#FFFFFF",
  "text_background_color": true,
  "font_size": 60,
  "stroke_color": "#000000",
  "stroke_width": 1.5,
  "n_threads": 2,
  "paragraph_number": 1,
  "task_id": "7a64351f-c7dd-46d7-bf81-03410f295294",
  "test_mode": false,
  "segments": 1,
  "language": "English",
  "story_prompt": "docker",
  "image_style": "realistic",
  "resolution": "1920*1080",
  "include_subtitles": false,
  "visual_content_in_language": true,
  "logo_url": null,
  "intro_video_url": null,
  "outro_video_url": null,
  "theme": "warm",
  "custom_colors": null,
  "scenes": [
    {
      "text": "Docker is an open platform for developing, shipping, and running applications, enabling developers to separate their applications from their infrastructure. This separation allows for faster software delivery and deployment. Docker provides the ability to package and run an application in a loosely isolated environment called a container. Containers have become the standard way to build and deploy modern applications, allowing dev teams to work in distributed modes and ensuring that applications run consistently on any device, on-premises, or in the cloud.",
      "image_prompt": "# Docker Architecture Overview\n\n```mermaid\ngraph LR\n    A[Docker Host] -- Contains --> B[Docker Daemon]\n    B -- Manages --> C[Containers]\n    B -- Downloads --> D[Images]\n    C -- Isolated environments --> E[Applications]\n    F[Docker Client] -- Communicates with --> B\n```\n\n### Key Elements:\n\n| Component       | Description                                |\n|-----------------|--------------------------------------------|\n| Docker Host     | Physical or virtual machine running Docker |\n| Docker Daemon   | Background service managing Docker objects |\n| Images          | Read-only template to create containers    |\n| Containers      | Lightweight, isolated execution environments|\n| Docker Client   | Interface for users to interact with Docker|\n\n> **Key Points:** Docker ensures applications run consistently across different environments leveraging containerization.",
      "url": ""
    }
  ]
}