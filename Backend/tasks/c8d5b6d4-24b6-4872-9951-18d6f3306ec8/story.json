{
  "video_subject": null,
  "video_script": null,
  "video_terms": null,
  "video_aspect": "9:16",
  "video_concat_mode": "random",
  "video_clip_duration": 5,
  "video_count": 1,
  "video_source": "pexels",
  "video_materials": null,
  "video_language": "English",
  "voice_name": "en-AU-NatashaNeural",
  "voice_volume": 1.0,
  "voice_rate": 1.0,
  "bgm_type": "random",
  "bgm_file": "",
  "bgm_volume": 0.2,
  "subtitle_enabled": true,
  "subtitle_position": "bottom",
  "custom_position": 70.0,
  "font_name": "STHeitiMedium.ttc",
  "text_fore_color": "#FFFFFF",
  "text_background_color": true,
  "font_size": 60,
  "stroke_color": "#000000",
  "stroke_width": 1.5,
  "n_threads": 2,
  "paragraph_number": 1,
  "task_id": "c8d5b6d4-24b6-4872-9951-18d6f3306ec8",
  "test_mode": false,
  "segments": 1,
  "language": "English",
  "story_prompt": "docker",
  "image_style": "realistic",
  "resolution": "1920*1080",
  "include_subtitles": false,
  "visual_content_in_language": true,
  "logo_url": null,
  "intro_video_url": null,
  "outro_video_url": null,
  "theme": "sunset",
  "custom_colors": null,
  "scenes": [
    {
      "text": "Docker is a platform that allows developers to automate the deployment of applications inside lightweight, portable containers. These containers can run virtually anywhere, whether on a developer's local machine, a data center, or in the cloud. Docker containers package an application with all its dependencies, ensuring consistency across various environments. This encapsulation simplifies software delivery by isolating applications from infrastructure, which addresses the common issue of 'works on my machine'. Docker's architecture includes a daemon that manages containers, images, and networks, alongside a client utility to issue commands.",
      "image_prompt": "## Docker Architecture Overview\n\n```mermaid\nflowchart LR\n    A[Docker Client] --> B[Docker Daemon]\n    B --> C[Image Management]\n    B --> D[Container Management]\n    C --> E[Images]\n    D --> F[Containers]\n```\n\n### Key Components:\n\n| Component | Description |\n|-----------|-------------|\n| Docker Client | Interface to interact with Docker |\n| Docker Daemon | Core service handling Docker objects |\n| Images | Immutable file system layers |\n| Containers | Run applications with encapsulated environments |\n\n> **Note:** Docker's design enhances application portability and ease of deployment.",
      "url": ""
    }
  ]
}