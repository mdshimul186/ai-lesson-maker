{
  "video_subject": null,
  "video_script": null,
  "video_terms": null,
  "video_aspect": "9:16",
  "video_concat_mode": "random",
  "video_clip_duration": 5,
  "video_count": 1,
  "video_source": "pexels",
  "video_materials": null,
  "video_language": "English",
  "voice_name": "en-AU-NatashaNeural",
  "voice_volume": 1.0,
  "voice_rate": 1.0,
  "bgm_type": "random",
  "bgm_file": "",
  "bgm_volume": 0.2,
  "subtitle_enabled": true,
  "subtitle_position": "bottom",
  "custom_position": 70.0,
  "font_name": "STHeitiMedium.ttc",
  "text_fore_color": "#FFFFFF",
  "text_background_color": true,
  "font_size": 60,
  "stroke_color": "#000000",
  "stroke_width": 1.5,
  "n_threads": 2,
  "paragraph_number": 1,
  "task_id": "32af5355-d082-44f9-b6a0-f51a0d1c24a6",
  "test_mode": false,
  "segments": 1,
  "language": "English",
  "story_prompt": "docker",
  "image_style": "realistic",
  "resolution": "1920*1080",
  "include_subtitles": false,
  "visual_content_in_language": true,
  "logo_url": null,
  "intro_video_url": null,
  "outro_video_url": null,
  "theme": "warm",
  "custom_colors": null,
  "scenes": [
    {
      "text": "Docker is a powerful platform for developing, shipping, and running applications inside containers. It allows developers to package applications with all their dependencies, ensuring consistency across different environments. Docker containers are lightweight and efficient, sharing the host OS kernel while maintaining application isolation. Essentially, Docker enables developers to create an isolated environment to execute applications reliably across platforms, improving collaboration and deployment speed.",
      "image_prompt": "# Docker Architecture Overview\n\n```mermaid\nflowchart TD\n    A[Docker CLI] --> B[Docker Daemon]\n    B --> C[Container]\n    B --> D[Images]\n    C --> E[Network]\n    C --> F[Volumes]\n```\n\n### Key Components:\n\n| Component     | Description                           |\n|---------------|---------------------------------------|\n| Docker CLI    | Command-line interface for Docker.    |\n| Docker Daemon | Background service for managing Docker|\n| Container     | Lightweight unit of execution.        |\n| Images        | Read-only templates to create containers|\n| Network       | Allows container communication.        |\n| Volumes       | Persistent storage for containers.     |",
      "url": ""
    }
  ]
}